We can use alias in mysql as reference varaiable:
 select ename, sal, sal*12 as Annual_Salary// alias
    -> from emp
    -> where sal*12 > 12000;

We can use distinct command to avoid repeatation or duplicate values from the table.
It should be used as first argument in the select clause.
We can use multiple columns for distinct clause.
//Command to execute distinct function:
 
select distinct sal
    -> from emp;

To view emp working as clerk and sal < 1500:
 select* from emp where job = 'CLERK' and sal < 1500;
+-------+--------+-------+------+------------+---------+------+--------+
| empno | ename  | job   | mgr  | hiredate   | sal     | comm | deptno |
+-------+--------+-------+------+------------+---------+------+--------+
|  7369 | SMITH  | CLERK | 7902 | 1980-12-17 |  800.00 | NULL |     20 |
|  7876 | ADAMS  | CLERK | 7788 | 1983-01-12 | 1100.00 | NULL |     20 |
|  7900 | JAMES  | CLERK | 7698 | 1981-12-03 |  950.00 | NULL |     30 |
|  7934 | MILLER | CLERK | 7782 | 1982-01-23 | 1300.00 | NULL |     10 |
+-------+--------+-------+------+------------+---------+------+--------+

To view the emp name stating with a and ending with n we can use:
select* from emp where ename like 'a%n';
We can use non-like command do dispaly the name except allen.

To view the emp name stating with a and ending with n and it has 5 character we can use:
 select* from emp where ename like 'a___n';
+-------+-------+----------+------+------------+---------+--------+--------+
| empno | ename | job      | mgr  | hiredate   | sal     | comm   | deptno |
+-------+-------+----------+------+------------+---------+--------+--------+
|  7499 | ALLEN | SALESMAN | 7698 | 1981-02-20 | 1600.00 | 300.00 |     30 |
+-------+-------+----------+------+------------+---------+--------+--------+

To view the emp details who are working in depno 10,20,30,40,50 we can use:
select* from emp where deptno in(10,20,30,40,50);
+-------+--------+-----------+------+------------+---------+---------+--------+
| empno | ename  | job       | mgr  | hiredate   | sal     | comm    | deptno |
+-------+--------+-----------+------+------------+---------+---------+--------+
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |    NULL |     20 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 | 3000.00 |    NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 | 1100.00 |    NULL |     20 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |    NULL |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |    NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 |
+-------+--------+-----------+------+------------+---------+---------+--------+

To view the emp details who are working in depno 20 or 30 we can use:
select* from emp where deptno = 20 or 30;
+-------+--------+-----------+------+------------+---------+---------+--------+
| empno | ename  | job       | mgr  | hiredate   | sal     | comm    | deptno |
+-------+--------+-----------+------+------------+---------+---------+--------+
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |    NULL |     20 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 | 3000.00 |    NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 | 1100.00 |    NULL |     20 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |    NULL |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |    NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 |
+-------+--------+-----------+------+------------+---------+---------+--------+

To view the emp details with annual salary and who are not working as analyst or manager:
 select*,sal*12
    -> from emp
    -> where job not in('ANALYST', 'MANAGER');
+-------+--------+-----------+------+------------+---------+---------+--------+----------+
| empno | ename  | job       | mgr  | hiredate   | sal     | comm    | deptno | sal*12   |
+-------+--------+-----------+------+------------+---------+---------+--------+----------+
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |    NULL |     20 |  9600.00 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 | 19200.00 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 | 15000.00 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 | 15000.00 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 | 60000.00 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 | 18000.00 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 | 1100.00 |    NULL |     20 | 13200.00 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |    NULL |     30 | 11400.00 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 | 15600.00 |
+-------+--------+-----------+------+------------+---------+---------+--------+----------+

Between operator:
  Between operator is used when we have range of values(Start and end value)
Note:
  Between operator works including the ranges but we have to use[+1,-1] method.

To view the emp name with the specific hiredate we can use:
select ename,hiredate
    -> from emp
    -> where hiredate > '1981-12-01';
+--------+------------+
| ename  | hiredate   |
+--------+------------+
| SCOTT  | 1982-12-09 |
| ADAMS  | 1983-01-12 |
| JAMES  | 1981-12-03 |
| FORD   | 1981-12-03 |
| MILLER | 1982-01-23 |
+--------+------------+

Day08 Task:

1) Fetch students with > 80 marks(where function)
 select* from student;
+----------+------------+----------------------+------------+----------+---------------------+---------+-------+
| studname | studrollno | studemail            | studphno   | studdept | course              | subject | marks |
+----------+------------+----------------------+------------+----------+---------------------+---------+-------+
| HEMANATH  |     103723 | HEMANATH123@gmail.com | 1234567891 | CT       | Computer Technology | Tamil   |    90 |
| Robert   |     103725 | Robert413@gmail.com  | 1234876590 | CT       | Computer Technology | Tamil   |    79 |
| Anirudha |     103726 | ani567@gmail.com     |  994241324 | CT       | Computer Technology | Tamil   |    75 |
| Abi      |     103728 | abi1611@gmail.com    | 1239874560 | CT       | Computer Technology | Tamil   |    70 |
| Sam      |     103729 | sam1037@gmail.com    | 1445167892 | CT       | Computer Technology | Tamil   |    65 |
+----------+------------+----------------------+------------+----------+---------------------+---------+-------+

select* from student where marks > 80;
+----------+------------+----------------------+------------+----------+---------------------+---------+-------+
| studname | studrollno | studemail            | studphno   | studdept | course              | subject | marks |
+----------+------------+----------------------+------------+----------+---------------------+---------+-------+
| HEMANATH  |     103723 | HEMANATH123@gmail.com | 1234567891 | CT       | Computer Technology | Tamil   |    90 |
+----------+------------+----------------------+------------+----------+---------------------+---------+-------+
2) List courses by ascending fees(order by)
3) Search books by keyword using LIKE
Main Program: Customer record filtering system(where function).

Multi row function:
  It execute group by group.
  It combines all the input in one short and gives one output.
  If we pause 'n' numbers of inputs to multi row function will give one output.
  The alternative names are aggreate function.

Types of function:
1) MAX()
2) MIN()
3) AVG()
4) SUM()
5) COUNT()

Count():
select count(*)
    -> from emp
    -> where sal < 2000 and deptno = 10;
+----------+
| count(*) |
+----------+
|        1 |
+----------+

Max():
 select max(sal)
    -> from emp
    -> where job = 'CLERK';
+----------+
| max(sal) |
+----------+
|  1300.00 |
+----------+

Min():
select min(sal)
    -> from emp
    -> where job = 'MANAGER';
+----------+
| min(sal) |
+----------+
|  2450.00 |
+----------+

Avg():
select avg(sal)
    -> from emp;
+-------------+
| avg(sal)    |
+-------------+
| 2073.214286 |
+-------------+
This the average of all the employee in the table.

To find avg(sal),sum(sal),no of emp,max(sal) we can use:
select avg(sal), sum(sal), count(ename), max(sal)
    -> from emp
    -> where job = 'MANAGER'
    -> group by sal,ename;
+-------------+----------+--------------+----------+
| avg(sal)    | sum(sal) | count(ename) | max(sal) |
+-------------+----------+--------------+----------+
| 2975.000000 |  2975.00 |            1 |  2975.00 |
| 2850.000000 |  2850.00 |            1 |  2850.00 |
| 2450.000000 |  2450.00 |            1 |  2450.00 |
+-------------+----------+--------------+----------+

Group by clause:
  It is used to group the records.
  It execute row by row.
EX:
select sum(sal),job
    -> from emp
    -> group by job;
+----------+-----------+
| sum(sal) | job       |
+----------+-----------+
|  4150.00 | CLERK     |
|  5600.00 | SALESMAN  |
|  8275.00 | MANAGER   |
|  6000.00 | ANALYST   |
|  5000.00 | PRESIDENT |
+----------+-----------+

To view emp in all dept:
select count(*),ename
    -> from emp
    -> group by ename;
+----------+--------+
| count(*) | ename  |
+----------+--------+
|        1 | SMITH  |
|        1 | ALLEN  |
|        1 | WARD   |
|        1 | JONES  |
|        1 | MARTIN |
|        1 | BLAKE  |
|        1 | CLARK  |
|        1 | SCOTT  |
|        1 | KING   |
|        1 | TURNER |
|        1 | ADAMS  |
|        1 | JAMES  |
|        1 | FORD   |
|        1 | MILLER |
+----------+--------+

To view count of emp hired in a year:
 select count(*),hiredate
    -> from emp
    -> group by hiredate;
+----------+------------+
| count(*) | hiredate   |
+----------+------------+
|        1 | 1980-12-17 |
|        1 | 1981-02-20 |
|        1 | 1981-02-22 |
|        1 | 1981-04-02 |
|        1 | 1981-09-28 |
|        1 | 1981-05-01 |
|        1 | 1981-06-09 |
|        1 | 1982-12-09 |
|        1 | 1981-11-17 |
|        1 | 1981-09-08 |
|        1 | 1983-01-12 |
|        2 | 1981-12-03 |
|        1 | 1982-01-23 |
+----------+------------+

Sum of commision bought by each emp:
select sum(comm),count(ename)
    -> from emp
    -> group by comm,ename;
+-----------+--------------+
| sum(comm) | count(ename) |
+-----------+--------------+
|      NULL |            1 |
|    300.00 |            1 |
|    500.00 |            1 |
|      NULL |            1 |
|   1400.00 |            1 |
|      NULL |            1 |
|      NULL |            1 |
|      NULL |            1 |
|      NULL |            1 |
|      0.00 |            1 |
|      NULL |            1 |
|      NULL |            1 |
|      NULL |            1 |
|      NULL |            1 |
+-----------+--------------+

Avg of manager sal in each dept:
select avg(mgr),count(ename)
    -> from emp
    -> group by mgr,ename;
+-----------+--------------+
| avg(mgr)  | count(ename) |
+-----------+--------------+
| 7902.0000 |            1 |
| 7698.0000 |            1 |
| 7698.0000 |            1 |
| 7839.0000 |            1 |
| 7698.0000 |            1 |
| 7839.0000 |            1 |
| 7839.0000 |            1 |
| 7566.0000 |            1 |
|      NULL |            1 |
| 7698.0000 |            1 |
| 7788.0000 |            1 |
| 7698.0000 |            1 |
| 7566.0000 |            1 |
| 7782.0000 |            1 |
+-----------+--------------+

Having clause:
  It is used to filter groups.
  It must be written after the group by clause.
  It execute group by group.
  Having clause execute after the execution og group by clause.
EX-1:
select sum(sal),job
    -> from emp
    -> group by job
    -> having sum(sal) > 5000;
+----------+----------+
| sum(sal) | job      |
+----------+----------+
|  5600.00 | SALESMAN |
|  8275.00 | MANAGER  |
|  6000.00 | ANALYST  |
+----------+----------+

EX-2:
select count(*),deptno
    -> from emp
    -> where job = 'CLERK'
    -> group by deptno
    -> having count(*) >=2;
+----------+--------+
| count(*) | deptno |
+----------+--------+
|        2 |     20 |
+----------+--------+

Class tasks:

1) Show departments where the vsalary is more than 2000?
Ans:
select avg(sal),ename
    -> from emp
    -> group by ename
    -> having avg(sal) > 2000;
+-------------+-------+
| avg(sal)    | ename |
+-------------+-------+
| 2975.000000 | JONES |
| 2850.000000 | BLAKE |
| 2450.000000 | CLARK |
| 3000.000000 | SCOTT |
| 5000.000000 | KING  |
| 3000.000000 | FORD  |
+-------------+-------+
2) List managers(mgr) with more than 2 employees reporting to them?
Ans:
select sum(comm),job
    -> from emp
    -> group by job
    -> having sum(comm) > 1000;
+-----------+----------+
| sum(comm) | job      |
+-----------+----------+
|   2200.00 | SALESMAN |
+-----------+----------+
3) Display job roles with a total commision above 1000?
Ans:
select count(*),job
    -> from emp
    -> where job = 'MANAGER'
    -> having count(*)>2;
+----------+---------+
| count(*) | job     |
+----------+---------+
|        3 | MANAGER |
+----------+---------+